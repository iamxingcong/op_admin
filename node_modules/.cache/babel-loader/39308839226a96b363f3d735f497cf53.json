{"ast":null,"code":"var _jsxFileName = \"/Users/xc/Public/capacity_1103/front_new/src/views/pages/RedisDetail.js\";\nimport React from 'react';\nimport { Table, Form, InputNumber, Button, notification } from 'antd';\nimport axios from \"axios\";\nimport { APIURL } from '../../common/constdt.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RedisDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabledtnew: null,\n      pre_qpscurrent: null,\n      user_name: null\n    };\n    this.cfm = this.cfm.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.blurs = this.blurs.bind(this);\n  }\n\n  componentDidMount() {\n    this.agetRates();\n  }\n\n  async cfm(d) {\n    console.log(d);\n    const url = `${APIURL}/redis/verify`;\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"redis_id\", d.id);\n    bodyFormData.append(\"event_id\", this.props.event_id);\n\n    if (this.props.EngName) {\n      bodyFormData.append(\"user_name\", this.props.EngName);\n    }\n\n    let that = this;\n    await axios.post(url, bodyFormData, {\n      withCredentials: true\n    }).then(function (response) {\n      if (response.data.code === 0) {\n        that.agetRates();\n        notification.success({\n          message: '提示',\n          description: '确认成功',\n          placement: 'topCenter',\n          onClick: () => {\n            console.log('Notification Clicked!');\n          }\n        });\n      } else {\n        notification.error({\n          message: '提示',\n          description: response.data.msg,\n          duration: 60,\n          placement: 'topCenter',\n          onClick: () => {\n            console.log('Notification Clicked!');\n          }\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onBlur(v) {\n    console.log(v);\n    this.setState({\n      pre_qpscurrent: v\n    });\n  }\n\n  async blurs(v) {\n    console.log(v);\n    console.log(this.state.pre_qpscurrent);\n    const url = `${APIURL}/redis/update`;\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"redis_id\", v.id);\n    bodyFormData.append(\"pre_qps\", this.state.pre_qpscurrent);\n    let that = this;\n    await axios.post(url, bodyFormData, {\n      withCredentials: true\n    }).then(function (response) {\n      if (response.data.code === 0) {\n        that.agetRates();\n        notification.success({\n          message: '提示',\n          description: '修改成功',\n          placement: 'topCenter',\n          onClick: () => {\n            console.log('Notification Clicked!');\n          }\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  async agetRates() {\n    var ts = this.props.event_id;\n    const url = `${APIURL}/redis/list?event_id=${ts}`;\n    var that = this;\n    await axios.get(url, {\n      withCredentials: true\n    }).then(function (response) {\n      if (response.data.code == 0) {\n        that.setState({\n          tabledtnew: response.data.data\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: '实例名',\n      dataIndex: 'instance_name',\n      align: \"center\",\n      width: \"33.3%\"\n    }, {\n      title: '预估QPS',\n      dataIndex: 'pre_qps',\n      align: \"center\",\n      width: \"33.3%\",\n      render: (text, data) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"expandinputct\",\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          defaultValue: data.pre_qps,\n          placeholder: data.pre_qps,\n          onChange: this.onBlur,\n          onBlur: () => this.blurs(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)\n    }, {\n      title: '平台负责人确认',\n      dataIndex: 'type_name',\n      align: \"center\",\n      width: \"33.3%\",\n      render: (text, data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.confirm_status == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brespans\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.confirm_user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.confirm_datetime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: \"small\",\n          onClick: () => this.cfm(data),\n          children: \"\\u786E\\u8BA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"OTTDetail\",\n      className: \"redisdivs\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basicx\",\n        onFinish: this.onFinish,\n        autoComplete: \"off\",\n        children: this.state.tabledtnew ? /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          rowKey: \"id\",\n          dataSource: this.state.tabledtnew,\n          pagination: {\n            total: this.state.tabledtnew.length,\n            pageSize: this.state.tabledtnew.length\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/xc/Public/capacity_1103/front_new/src/views/pages/RedisDetail.js"],"names":["React","Table","Form","InputNumber","Button","notification","axios","APIURL","RedisDetail","Component","constructor","props","state","tabledtnew","pre_qpscurrent","user_name","cfm","bind","onBlur","blurs","componentDidMount","agetRates","d","console","log","url","bodyFormData","FormData","append","id","event_id","EngName","that","post","withCredentials","then","response","data","code","success","message","description","placement","onClick","error","msg","duration","catch","v","setState","ts","get","render","columns","title","dataIndex","align","width","text","pre_qps","index","confirm_status","confirm_user","confirm_datetime","onFinish","total","length","pageSize"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Form, InputNumber, Button , notification } from 'antd';\n\nimport axios from \"axios\";\n\nimport { APIURL } from '../../common/constdt.js';\n\n\n\n\nexport default class RedisDetail extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n\n            tabledtnew: null,\n            pre_qpscurrent: null,\n            user_name: null,\n\n        }\n        this.cfm = this.cfm.bind(this)\n        this.onBlur = this.onBlur.bind(this)\n        this.blurs = this.blurs.bind(this)\n\n\n\n    }\n\n\n\n\n\n    componentDidMount() {\n\n        this.agetRates();\n\n    }\n\n\n   \n  \n    async cfm(d){\n        console.log(d)\n    \n        const url = `${APIURL}/redis/verify`;\n\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"redis_id\", d.id);\n        bodyFormData.append(\"event_id\", this.props.event_id);\n         \n        if(this.props.EngName){\n            bodyFormData.append(\"user_name\", this.props.EngName);\n        }\n        \n        let that = this;\n       \n        await axios.post(url, bodyFormData, { withCredentials: true })\n        .then(function (response) {\n         \n            if (response.data.code === 0) {\n                   \n                  that.agetRates();\n                 \n                notification.success({\n                    message: '提示',\n                    description: '确认成功',\n                    placement: 'topCenter',\n                    onClick: () => {\n                      console.log('Notification Clicked!');\n                    },\n                });\n\n            } else {\n                \n               \n                notification.error({\n                    message: '提示',\n                    description: response.data.msg,\n                    duration: 60,\n                    placement: 'topCenter',\n                    onClick: () => {\n                      console.log('Notification Clicked!');\n                    },\n                });\n                \n            }\n\n          })\n          .catch(function (error) {\n            console.log(error);\n            \n          })\n    }\n    onBlur(v){\n        console.log(v)\n        this.setState({\n            pre_qpscurrent: v\n        })\n        \n    }\n    async blurs(v){\n        console.log(v)\n        console.log(this.state.pre_qpscurrent)\n\n\n        const url = `${APIURL}/redis/update`;\n\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"redis_id\", v.id);\n        bodyFormData.append(\"pre_qps\", this.state.pre_qpscurrent);\n        \n        let that = this;\n       \n        await axios.post(url, bodyFormData, { withCredentials: true })\n        .then(function (response) {\n            \n            \n            if (response.data.code === 0) {\n                   \n                that.agetRates();\n                  \n                notification.success({\n                    message: '提示',\n                    description: '修改成功',\n                    placement: 'topCenter',\n                    onClick: () => {\n                      console.log('Notification Clicked!');\n                    },\n                });\n\n              }\n          })\n          .catch(function (error) {\n            console.log(error);\n            \n          })\n    }\n    async agetRates() {\n\n\n        var ts = this.props.event_id;\n\n        const url = `${APIURL}/redis/list?event_id=${ts}`;\n\n       \n\n        var that = this;\n        await axios.get(url, { withCredentials: true })\n        .then(function (response) {\n             \n          if (response.data.code == 0) {\n           \n            that.setState({\n                \n                tabledtnew: response.data.data,\n            })\n        }\n        })\n        .catch(function (error) {\n          console.log(error);\n         \n          \n        })\n  \n\n \n    }\n\n    render() {\n\n\n        const columns = [\n            {\n                title: '实例名',\n                dataIndex: 'instance_name',\n                align: \"center\",\n                width: \"33.3%\",\n            },\n           \n            {\n                title: '预估QPS',\n                dataIndex: 'pre_qps',\n                align: \"center\",\n                width: \"33.3%\",\n                render: (text, data) => (\n                    <span  className=\"expandinputct\">\n                        <InputNumber defaultValue={data.pre_qps}  placeholder={data.pre_qps}  onChange={this.onBlur}  onBlur={()=>this.blurs(data)} />\n                \n                    </span>\n                    )\n                \n\n            },\n            {\n                title: '平台负责人确认',\n                dataIndex: 'type_name',\n                align: \"center\",\n                width: \"33.3%\",\n                render: (text, data, index) => (\n                    <div>\n\n                         {data.confirm_status == 1 ? (\n                            \n                             <div className=\"brespans\"> \n                             <span>\n                               {data.confirm_user } \n                             </span> \n                             <span>\n                               {  data.confirm_datetime } \n                              </span>\n                            </div>\n                         ): (\n                            \n                            <Button  type=\"primary\" size=\"small\"  onClick={()=>this.cfm(data)}>\n                                确认\n                            </Button>\n                             \n                            \n                         )}\n                    </div>\n                     \n                )\n\n            },\n        ]\n        return (\n            <div id=\"OTTDetail\"  className=\"redisdivs\">\n                <Form\n                    name=\"basicx\"\n\n\n                    onFinish={this.onFinish}\n\n                    autoComplete=\"off\"\n\n                >\n                    {this.state.tabledtnew ? (\n                        <Table\n\n                        columns={columns}\n                        rowKey=\"id\"\n                        dataSource={this.state.tabledtnew}\n                        pagination={{\n                            total: this.state.tabledtnew.length,\n                            pageSize: this.state.tabledtnew.length,\n                        }}\n                        \n                    />\n\n                    ) : (\"\")}\n                    \n\n                </Form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}